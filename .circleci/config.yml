# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.0
        environment:
          BUNDLER_VERSION: 2.0.1
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: 'ryuhei'
          DB_PASSWORD: 'ryuhei0221'

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mysql:8.0.19
        environment:
          MYSQL_DATABASE: blog_app_test

    working_directory: ~/blog_app

    steps:
      - checkout
      - run:
          name: default mysql client install
          command: |
            sudo apt update
            sudo apt-get install default-mysql-client
    #  - run:
    #      name: bundle Install
    #      command: bundle install --path vendor/bundle

      - run:
          name: install Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

       # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s


      # Database setup
    #  - run: yarn install
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
    #  - run:
    #      name: Rspec
    #      command: |
    #        mkdir /tmp/test-results
    #        TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

    #        bundle exec rspec --format progress \
    #                        --format RspecJunitFormatter \
    #                        --format progress \
    #                      $TEST_FILES

      # collect reports
    #  - store_test_results:
    #      path: /tmp/test-results
    #  - store_artifacts:
    #      path: /tmp/test-results
    #      destination: test-results

      # run rubocop
    #  - run:
    #      name: run rubocop
    #      command: bundle exec rubocop
